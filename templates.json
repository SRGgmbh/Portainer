{
	"version": "2",
	"_comment": "customized copy of original portainer template file",
	"_source": "https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json",
	"_git": "https://github.com/SRGgmbh/Portainer.git",
	"templates": [
		{
			"type": 3,
			"title": "Vaultwarden",
			"description": "Alternative implementation of the Bitwarden server API",
			"categories": [
				"security"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://github.com/dani-garcia/vaultwarden/wiki\" target=\"_blank\">Vaultwarden WIKI</a> for further configuration (repo: <a href=\"https://hub.docker.com/r/vaultwarden/server\" target=\"_blank\">Docker Hub</a>).",
			"logo": "https://cdn.srg.one/a/images/partner/vaultwarden.png",
			"repository": {
				"stackfile": "stacks/vaultwarden/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/r/vaultwarden/server)",
					"default": "latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				},
				{
					"name": "DOMAIN",
					"label": "Vault URL",
					"description": "the URL for this Instance (https://xxxxx)"
				},
				{
					"name": "HIBP_TOKEN",
					"label": "HIBP Token",
					"description": "Token for Have i been Pawned API"
				},
				{
					"name": "DOMAINLIST",
					"label": "Domain Whitelist",
					"description": "allowed domains for signup, comma seperated listp"
				},
				{
					"name": "USERLIST",
					"label": "Organization Creators",
					"description": "user who can create organizations, comma seperated list"
				},
				{
					"name": "ADMIN_TOKEN",
					"label": "Admin Token",
					"description": "Token for Vaultwarden Admin Interface. ONLY ACCESIBLE VIA TRUSTED IPS"
				},
				{
					"name": "O365_USERNAME",
					"label": "365 User",
					"description": "Office 365 Username for SMTP (typicaly the email address)"
				},
				{
					"name": "O365_PASSWORD",
					"label": "365 Password",
					"description": "Office 365 Password for SMTP"
				}
			]
		},
		{
			"type": 3,
			"title": "Vaultwarden (Freelancer)",
			"description": "Alternative implementation of the Bitwarden server API.",
			"categories": [
				"security"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://github.com/dani-garcia/vaultwarden/wiki\" target=\"_blank\">Vaultwarden WIKI</a> for further configuration (repo: <a href=\"https://hub.docker.com/r/vaultwarden/server\" target=\"_blank\">Docker Hub</a>).",
			"logo": "https://cdn.srg.one/a/images/partner/vaultwarden.png",
			"repository": {
				"stackfile": "stacks/vaultwarden/freelancer/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/r/vaultwarden/server)",
					"default": "latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				},
				{
					"name": "DOMAIN",
					"label": "Vault URL",
					"description": "the URL for this Instance (https://xxxxx)"
				},
				{
					"name": "HIBP_TOKEN",
					"label": "HIBP Token",
					"description": "Token for Have i been Pawned API"
				},
				{
					"name": "USERLIST",
					"label": "Organization Creators",
					"description": "user who can create organizations, comma seperated list"
				},
				{
					"name": "ADMIN_TOKEN",
					"label": "Admin Token",
					"description": "Token for Vaultwarden Admin Interface. ONLY ACCESIBLE VIA TRUSTED IPS"
				},
				{
					"name": "O365_USERNAME",
					"label": "365 User",
					"description": "Office 365 Username for SMTP (typicaly the email address)"
				},
				{
					"name": "O365_PASSWORD",
					"label": "365 Password",
					"description": "Office 365 Password for SMTP"
				}
			]
		},
		{
			"type": 3,
			"title": "Vaultwarden (Team)",
			"description": "Alternative implementation of the Bitwarden server API",
			"categories": [
				"security"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://github.com/dani-garcia/vaultwarden/wiki\" target=\"_blank\">Vaultwarden WIKI</a> for further configuration (repo: <a href=\"https://hub.docker.com/r/vaultwarden/server\" target=\"_blank\">Docker Hub</a>).",
			"logo": "https://cdn.srg.one/a/images/partner/vaultwarden.png",
			"repository": {
				"stackfile": "stacks/vaultwarden/team/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/r/vaultwarden/server)",
					"default": "latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				},
				{
					"name": "DOMAIN",
					"label": "Vault URL",
					"description": "the URL for this Instance (https://xxxxx)"
				},
				{
					"name": "HIBP_TOKEN",
					"label": "HIBP Token",
					"description": "Token for Have i been Pawned API"
				},
				{
					"name": "USERLIST",
					"label": "Organization Creators",
					"description": "user who can create organizations, comma seperated list"
				},
				{
					"name": "ADMIN_TOKEN",
					"label": "Admin Token",
					"description": "Token for Vaultwarden Admin Interface. ONLY ACCESIBLE VIA TRUSTED IPS"
				},
				{
					"name": "O365_USERNAME",
					"label": "365 User",
					"description": "Office 365 Username for SMTP (typicaly the email address)"
				},
				{
					"name": "O365_PASSWORD",
					"label": "365 Password",
					"description": "Office 365 Password for SMTP"
				}
			]
		},
		{
			"type": 3,
			"title": "Vaultwarden (Default)",
			"description": "Alternative implementation of the Bitwarden server API",
			"categories": [
				"security"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://github.com/dani-garcia/vaultwarden/wiki\" target=\"_blank\">Vaultwarden WIKI</a> for further configuration (repo: <a href=\"https://hub.docker.com/r/vaultwarden/server\" target=\"_blank\">Docker Hub</a>).",
			"logo": "https://cdn.srg.one/a/images/partner/vaultwarden.png",
			"repository": {
				"stackfile": "stacks/vaultwarden/default/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/r/vaultwarden/server)",
					"default": "latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				},
				{
					"name": "DOMAIN",
					"label": "Vault URL",
					"description": "the URL for this Instance (https://xxxxx)"
				},
				{
					"name": "HIBP_TOKEN",
					"label": "HIBP Token",
					"description": "Token for Have i been Pawned API"
				},
				{
					"name": "DOMAINLIST",
					"label": "Domain Whitelist",
					"description": "allowed domains for signup, comma seperated list"
				},
				{
					"name": "USERLIST",
					"label": "Organization Creators",
					"description": "user who can create organizations, comma seperated list"
				},
				{
					"name": "ADMIN_TOKEN",
					"label": "Admin Token",
					"description": "Token for Vaultwarden Admin Interface. ONLY ACCESIBLE VIA TRUSTED IPS"
				},
				{
					"name": "O365_USERNAME",
					"label": "365 User",
					"description": "Office 365 Username for SMTP (typicaly the email address)"
				},
				{
					"name": "O365_PASSWORD",
					"label": "365 Password",
					"description": "Office 365 Password for SMTP"
				}
			]
		},
		{
			"type": 3,
			"title": "Guacamole (Standalone)",
			"description": "Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. STANDALONE STACK (deamon, client and database).",
			"categories": [
				"serverless"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://guacamole.apache.org/\" target=\"_blank\">Guacamole Project</a> for further configuration (repo: <a href=\"https://hub.docker.com/u/guacamole\" target=\"_blank\">Docker Hub</a>).<br/>Initial Setup after Stack deployment:<ul><li>Upload customized [ROOT.war] in [/_node/stacks/guacamole/${INSTANCE}] volume</li><li>Upload corresponding database Schema in [/_node/stacks/guacamole/${INSTANCE}/mysql/schema] volume</li><li>Initialize Database Schema via Container Bash (cat /opt/guacamole/mysql/schema/*.sql | mysql -u root -p guacamole_db)</li><li>Setup Reverse Proxy with SSL for [http://guacamole_${INSTANCE}:8080], initial Credentials: guacadmin/guacadmin</li><li>[OPTIONAL] Upload Guacamole additional extensions (i.e. TOTP, AD-HOC ..) in [/_node/stacks/guacamole/${INSTANCE}/home/extensions]</li></ul>",
			"logo": "https://guacamole.apache.org/images/guacamole-logo-64.png",
			"repository": {
				"stackfile": "stacks/guacamole/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/u/guacamole)",
					"default": "latest"
				},
				{
					"name": "MYSQL_VERSION",
					"label": "MySQL Version",
					"description": "Repository Version (see: https://hub.docker.com/_/mysql)",
					"default": "latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				},
				{
					"name": "MYSQL_PASSWORD",
					"label": "MySQL Password",
					"description": "the password for the mysql root user"
				},
				{
					"name": "DB_PASSWORD",
					"label": "DB Password",
					"description": "the password for the mysql guacamole user"
				}
			]
		},
		{
			"type": 3,
			"title": "Guacamole",
 			"description": "Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. HA STACK (deamon and client).",
			"categories": [
				"serverless"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://guacamole.apache.org/\" target=\"_blank\">Guacamole Project</a> for further configuration (repo: <a href=\"https://hub.docker.com/u/guacamole\" target=\"_blank\">Docker Hub</a>).<br/>Initial Setup after Stack deployment:<ul><li>Upload customized [ROOT.war] in [/_node/stacks/guacamole/${INSTANCE}] volume</li><li>Upload customized [guacamole.properties] in [/_node/stacks/guacamole/${INSTANCE}/home] volume</li><li>Upload SQL Server JDBC Driver in [/_node/stacks/guacamole/${INSTANCE}/home/lib] volume</li><li>Upload SQL Server, OpenID Extensions in [/_node/stacks/guacamole/${INSTANCE}/home/extensions] volume, rename extensions to load extensions in needed order(000-...,001-...)</li><li>Setup Reverse Proxy with SSL for [http://guacamole_${INSTANCE}:8080], use Cloudflare ACL and Origin-Certificate</li><li>[OPTIONAL] Upload Guacamole additional extensions (i.e. TOTP, AD-HOC ..) in [/_node/stacks/guacamole/${INSTANCE}/home/extensions]</li></ul>",
			"logo": "https://guacamole.apache.org/images/guacamole-logo-64.png",
			"repository": {
				"stackfile": "stacks/guacamole/node/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/u/guacamole)",
					"default": "latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				}
			]
		},
		{
			"type": 3,
			"title": "Guacamole (Deamon)",
 			"description": "Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. HA STACK (deamon).",
			"categories": [
				"serverless"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://guacamole.apache.org/\" target=\"_blank\">Guacamole Project</a> for further configuration (repo: <a href=\"https://hub.docker.com/u/guacamole\" target=\"_blank\">Docker Hub</a>).<br/>Initial Setup after Stack deployment:<ul><li>Setup Reverse Proxy with SSL for [http://guacamole_${INSTANCE}_deamon:4822] redirect from <a href=\"https://blog.cloudflare.com/cloudflare-now-supporting-more-ports/\" target=\"_blank\">Cloudflare additional Ports</a>, use Cloudflare ACL and Origin-Certificate</li></ul>",
			"logo": "https://guacamole.apache.org/images/guacamole-logo-64.png",
			"repository": {
				"stackfile": "stacks/guacamole/deamon/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/u/guacamole)",
					"default": "latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				}
			]
		},
		{
			"type": 3,
			"title": "Guacamole (Client)",
 			"description": "Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. HA STACK (client).",
			"categories": [
				"serverless"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://guacamole.apache.org/\" target=\"_blank\">Guacamole Project</a> for further configuration (repo: <a href=\"https://hub.docker.com/u/guacamole\" target=\"_blank\">Docker Hub</a>).<br/>Initial Setup after Stack deployment:<ul><li>Upload customized [ROOT.war] in [/_node/stacks/guacamole/${INSTANCE}] volume</li><li>Upload customized [guacamole.properties] in [/_node/stacks/guacamole/${INSTANCE}/home] volume</li><li>Upload SQL Server JDBC Driver in [/_node/stacks/guacamole/${INSTANCE}/home/lib] volume</li><li>Upload SQL Server, OpenID Extensions in [/_node/stacks/guacamole/${INSTANCE}/home/extensions] volume, rename extensions to load extensions in needed order(000-...,001-...)</li><li>Setup Reverse Proxy with SSL for [http://guacamole_${INSTANCE}:8080], use Cloudflare ACL and Origin-Certificate</li><li>[OPTIONAL] Upload Guacamole additional extensions (i.e. TOTP, AD-HOC ..) in [/_node/stacks/guacamole/${INSTANCE}/home/extensions]</li></ul>",
			"logo": "https://guacamole.apache.org/images/guacamole-logo-64.png",
			"repository": {
				"stackfile": "stacks/guacamole/client/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/u/guacamole)",
					"default": "latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				},
				{
					"name": "GUACD_HOST",
					"label": "Deamon Host",
					"description": "Default deamon host for this clinet"
				},
				{
					"name": "GUACD_PORT",
					"label": "Deamon Port",
					"description": "Port of default deamon host"
				}
			]
		},
		{
			"type": 3,
			"title": "Proxy Manager",
			"description": "NGINX Proxy Manager. ALREADY INCLUDED IN NODE SETUP!",
			"categories": [
				"webserver"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://nginxproxymanager.com\" target=\"_blank\">NGINX Proxy Manager documentation</a> for further configuration (repo: <a href=\"https://hub.docker.com/r/jc21/nginx-proxy-manager\" target=\"_blank\">Docker Hub</a>).",
			"logo": "https://nginxproxymanager.com/icon.png",
			"repository": {
				"stackfile": "stacks/nginx-proxy-manager/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/r/jc21/nginx-proxy-manager)",
					"default": "latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				},
				{
					"name": "DISABLE_IPV6",
					"label": "IPv6",
					"description": "NGINX IPv6 Support",
					"select": [
						{
							"text": "Disabled",
							"value": "true",
							"default": true
						},
						{
							"text": "Enabled",
							"value": "false"
						}
					]
				}
			]
		},
		{
			"type": 3,
			"title": "OwnCloud",
			"description": "Official OwnCloud Docker image.",
			"categories": [
				"collaboration"
			],
			"platform": "linux",
			"note": "INSTANCE must be unique on every Portainer Node!, please refer to <a href=\"https://doc.owncloud.com/server/10.8/\" target=\"_blank\">OwnCloud WIKI</a> for further configuration (repo: <a href=\"https://hub.docker.com/r/owncloud/server\" target=\"_blank\">Docker Hub</a>).",
			"logo": "https://owncloud.com/wp-content/themes/ownCloud/dist/assets/img/favicon/apple-touch-icon.png",
			"repository": {
				"stackfile": "stacks/owncloud/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/r/owncloud/server)",
					"default": "latest"
				},
				{
					"name": "DB_VERSION",
					"label": "Database Version",
					"description": "Repository Version (see: https://hub.docker.com/_/mariadb) [recomended: 10.5]",
					"default": "10.5"
				},
				{
					"name": "CACHE_VERSION",
					"label": "Cache Version",
					"description": "Repository Version (see: https://hub.docker.com/_/redis) [recomended: 6]",
					"default": "6"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				},
				{
					"name": "DOMAIN",
					"label": "OwnCloud URL",
					"description": "the URL for this Instance (https://xxxxx)"
				},
				{
					"name": "ADMIN_USERNAME",
					"label": "Admin Username",
					"description": "Username of OwnCloud Administrator"
				},
				{
					"name": "ADMIN_PASSWORD",
					"label": "Admin Password",
					"description": "Password of OwnCloud Administrator"
				},
				{
					"name": "DB_SERVER_PASSWORD",
					"label": "Server Password",
					"description": "Password of Database Server",
					"default": "owncloud"
				},
				{
					"name": "DB_PASSWORD",
					"label": "Database Password",
					"description": "Password of OwnCloud Database",
					"default": "owncloud"
				}
			]
		},
		{
			"type": 3,
			"title": "SQL Server",
			"description": "Microsoft SQL Server on Linux",
			"categories": [
				"database"
			],
			"platform": "linux",
			"note": "With the deployment of this Stack you accepts the <a href=\"http://go.microsoft.com/fwlink/?LinkId=746388\" target=\"_blank\">The Microsoft SQL Server End-User License Agreement (EULA)</a>! Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols (repo: <a href=\"https://hub.docker.com/_/microsoft-mssql-server\" target=\"_blank\">Docker Hub</a>). <ul><li>DO NOT USE THE DEFAULT PASSWORD!</li><li>DO NOT USE ON PUBLIC NODES!</li></ul>",
			"logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
			"repository": {
				"stackfile": "stacks/mssql/docker-stack.yml",
				"url": "https://github.com/SRGgmbh/Portainer"
			},
			"env": [
				{
					"name": "INSTANCE",
					"label": "Instance ID",
					"description": "Container Instance Name (used for Hostname and Volume binding)"
				},
				{
					"name": "VERSION",
					"label": "Image Version",
					"description": "Repository Version (see: https://hub.docker.com/_/microsoft-mssql-server)",
					"default": "2019-latest"
				},
				{
					"name": "RESTART",
					"label": "Container Restart",
					"description": "Docker Container Restart Behaviour",
					"select": [
						{
							"text": "Always",
							"value": "always",
							"default": true
						},
						{
							"text": "On-Failure",
							"value": "on-failure"
						},
						{
							"text": "Unless-Stopped",
							"value": "unless-stopped"
						},
						{
							"text": "No",
							"value": "no"
						}
					]
				},
				{
					"name": "MSSQL_PORT",
					"label": "Port",
					"description": "SQL Server listening Port"
				},
				{
					"name": "ACCEPT_EULA",
					"default": "Y",
					"preset": true
				},
				{
					"name": "MSSQL_PID",
					"label": "Edition (PID)",
					"description": "Product ID (PID) or Edition that the container will run with",
					"select": [
						{
							"text": "Developer Edition",
							"value": "Developer",
							"default": true
						},
						{
							"text": "Express Edition",
							"value": "Express"
						},
						{
							"text": "Standard Edition",
							"value": "Standard"
						},
						{
							"text": "Enterprise Edition",
							"value": "Enterprise"
						},
						{
							"text": "Enterprise Edition Core",
							"value": "EnterpriseCore"
						}
					]
				},
				{
					"name": "SA_PASSWORD",
					"default": "#SQL#20x#",
					"label": "SA password"
				}
			]
		}
	]
}
