services:
  zitadel:
    container_name: zitadel_${INSTANCE}
    # The user should have the permission to write to ./machinekey
    user: "${UID:-1000}"
    restart: 'always'
    networks:
      - 'zitadel'
    image: 'ghcr.io/zitadel/zitadel:latest'
    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    environment:
      ZITADEL_DATABASE_POSTGRES_HOST: ${POSTGRES_HOST}
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: ${POSTGRES_DB}
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: ${POSTGRES_USER}
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: ${POSTGRES_PASSWORD}
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: enable
      #ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      #ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      #ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_EXTERNALSECURE: ${EXTERNALSECURE:-false}
      ZITADEL_FIRSTINSTANCE_MACHINEKEYPATH: ${MACHINE_KEYPATH:-/machinekey/zitadel-admin-sa.json}
      ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_USERNAME: ${MACHINE_USERNAME:-zitadel-admin-sa}
      ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_NAME: ${MACHINE_NAME:-Admin}
      ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINEKEY_TYPE: ${MACHINE_KEYTYPE:-1}
    ports:
      - '8080:8080'
    volumes:
      - ${MOUNT:-/tmp}/${INSTANCE}/machinekey:/machinekey:rw
    #healthcheck:
    #  test: ["CMD", "/usr/bin/check-health"]
    #  interval: 10s
    #  timeout: 3s
networks:
  default:
    external: true
    name: ${NETWORK:-node-network}
